name: Deploy to AWS Batch

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  TERRAFORM_DIR: './terraform'
  ECR_REPOSITORY: 'aws-batch-auditor-repo'

jobs:
  deploy:
    name: Deploy Infrastructure & Container
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0

    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Plan
      run: terraform plan -input=false -var="s3_audit_bucket_name=${{ secrets.TF_VAR_s3_audit_bucket_name }}"
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false -var="s3_audit_bucket_name=${{ secrets.TF_VAR_s3_audit_bucket_name }}"
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Check Terraform Outputs (Debug)
      run: terraform output
      working-directory: ${{ env.TERRAFORM_DIR }}

    # Now we need to set up AWS credentials again for the subsequent steps
    # because each step runs in a fresh shell environment
    - name: Configure AWS credentials for ECR
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Get ECR Repository URI
      id: ecr-repo
      run: |
        cd ${{ env.TERRAFORM_DIR }}
        echo "repository_url=$(terraform output -raw ecr_repository_url)" >> $GITHUB_OUTPUT

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, Tag, and Push Docker image
      run: |
        docker build -t ${{ steps.ecr-repo.outputs.repository_url }}:latest .
        docker push ${{ steps.ecr-repo.outputs.repository_url }}:latest

    - name: Configure AWS credentials for Batch
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Submit Test Job to AWS Batch
      run: |
        cd ${{ env.TERRAFORM_DIR }}
        JOB_DEFINITION=$(terraform output -raw batch_job_definition_name)
        JOB_QUEUE=$(terraform output -raw batch_job_queue_name)
        aws batch submit-job \
          --job-name "test-job-${GITHUB_SHA:0:8}" \
          --job-queue $JOB_QUEUE \
          --job-definition $JOB_DEFINITION \
          --region ${{ env.AWS_REGION }}